name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  staging:
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      contents: read
      checks: write
      pull-requests: write
      id-token: write

    env:
      REACT_APP_VAPID_KEY: BB1lykoVLZDxJGOTWmcsyuRetPpWjY6Kxf0vx4Ycir6zd-mFD2X2BThIPpqXCahKRsTdLGQ-dGSn0IjGgwILCGI
      REACT_APP_STREAMER_LIST: 133923936,137640527,130445097,574792191
      TWITCH_CLIENT_ID: a0z10ekcc2g8438h763l1ro7n4exlr

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install latest npm
        run: npm install -g npm

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-deps-v1-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-v1-

      - name: Cache functions dependencies
        uses: actions/cache@v2
        with:
          path: functions/node_modules
          key: npm-deps-v1-${{ hashFiles('functions/package-lock.json') }}
          restore-keys: |
            npm-deps-v1-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
          cd functions
          npm ci

      - name: Build
        run: yarn build
        env:
          TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}

      - name: Run tests
        run: yarn test

      - name: Install Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master

      - id: auth
        name: Authenticate to GCP
        uses: google-github-actions/auth@v0.4.1
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Deploy project
        run: |
          which firebase
          firebase --version
          yarn deploy
        env:
          TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}

  production:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: staging
    environment: production
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install latest npm
        run: npm install -g npm

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-deps-v1-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-v1-

      - name: Cache functions dependencies
        uses: actions/cache@v2
        with:
          path: functions/node_modules
          key: npm-deps-v1-${{ hashFiles('functions/package-lock.json') }}
          restore-keys: |
            npm-deps-v1-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
          cd functions
          npm ci

      - name: Deploy project
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > service-account-key.json
          GOOGLE_APPLICATION_CREDENTIALS="`pwd`/service-account-key.json" yarn deploy -p
        env:
          REACT_APP_VAPID_KEY: BCtN_-SoUnpMDaGkokpxq2hRTZaQpiLqdQGxlkSqgP0WYVULwrLEHdHg19wIHWE7-3UouQtTWbzcV9xrBM4XnYw
          REACT_APP_STREAMER_LIST: 133923936,137640527,130445097
          REACT_APP_SENTRY_DSN: https://f7b5c1ae56e048da86112bbc85010703@o75632.ingest.sentry.io/5782638
          TWITCH_CLIENT_ID: qib48iexfo831ymmwl8q2hbef6xglr
          TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: jebibot
          SENTRY_PROJECT: twitchgg-noti
        with:
          environment: production
          sourcemaps: ./build/static/js
